{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTitleDetailsByIMDBId = exports.getTitleDetailsByName = exports.getTitleDetailsByFoundedTitleDetails = exports.getTitleDetailsByUrl = void 0;\nconst enums_1 = require(\"./enums\");\nconst IMDBTitleDetailsResolver_1 = require(\"./resolvers/IMDBTitleDetailsResolver\");\nconst guessSourceTypeByUrl_1 = require(\"./utils/guessSourceTypeByUrl\");\nconst titleSearcher_1 = require(\"./titleSearcher\");\nconst convertIMDBTitleIdToUrl_1 = require(\"./utils/convertIMDBTitleIdToUrl\");\nasync function getTitleDetailsByUrl(titleUrl, opts) {\n  const sourceType = (0, guessSourceTypeByUrl_1.guessSourceTypeByUrl)(titleUrl);\n  //  select the resolver\n  let resolver;\n  switch (sourceType) {\n    case enums_1.Source.IMDB:\n    default:\n      resolver = new IMDBTitleDetailsResolver_1.IMDBTitleDetailsResolver(titleUrl);\n  }\n  // get details from resolver\n  let result;\n  try {\n    result = await resolver.getDetails(opts);\n  } catch (e) {\n    throw new Error(\"failed to get the result from IMDB : \" + e.message);\n  }\n  if (!result) {\n    throw new Error(\"there was a problem in getting title details, title resolver returned empty data\");\n  }\n  return result;\n}\nexports.getTitleDetailsByUrl = getTitleDetailsByUrl;\nasync function getTitleDetailsByFoundedTitleDetails(foundedTitleDetails, opts) {\n  return getTitleDetailsByUrl(foundedTitleDetails.url, opts);\n}\nexports.getTitleDetailsByFoundedTitleDetails = getTitleDetailsByFoundedTitleDetails;\nasync function getTitleDetailsByName(titleName, {\n  exactMatch = false,\n  specificType\n} = {}, opts) {\n  const allResults = await (0, titleSearcher_1.searchTitleByName)(titleName, {\n    exactMatch,\n    specificType\n  });\n  if (!allResults.length) {\n    throw new Error(`there wasn't any matched title with the given name : '${titleName}'`);\n  }\n  return getTitleDetailsByFoundedTitleDetails(allResults[0], opts);\n}\nexports.getTitleDetailsByName = getTitleDetailsByName;\nasync function getTitleDetailsByIMDBId(titleId, opts) {\n  return getTitleDetailsByUrl((0, convertIMDBTitleIdToUrl_1.convertIMDBTitleIdToUrl)(titleId), opts);\n}\nexports.getTitleDetailsByIMDBId = getTitleDetailsByIMDBId;","map":{"version":3,"names":["Object","defineProperty","exports","value","getTitleDetailsByIMDBId","getTitleDetailsByName","getTitleDetailsByFoundedTitleDetails","getTitleDetailsByUrl","enums_1","require","IMDBTitleDetailsResolver_1","guessSourceTypeByUrl_1","titleSearcher_1","convertIMDBTitleIdToUrl_1","titleUrl","opts","sourceType","guessSourceTypeByUrl","resolver","Source","IMDB","IMDBTitleDetailsResolver","result","getDetails","e","Error","message","foundedTitleDetails","url","titleName","exactMatch","specificType","allResults","searchTitleByName","length","titleId","convertIMDBTitleIdToUrl"],"sources":["/Users/divyashriravichandran/Desktop/Web Dev/Movie Info App/movie-info-app/node_modules/movier/dist/src/titleDetailGetters.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTitleDetailsByIMDBId = exports.getTitleDetailsByName = exports.getTitleDetailsByFoundedTitleDetails = exports.getTitleDetailsByUrl = void 0;\nconst enums_1 = require(\"./enums\");\nconst IMDBTitleDetailsResolver_1 = require(\"./resolvers/IMDBTitleDetailsResolver\");\nconst guessSourceTypeByUrl_1 = require(\"./utils/guessSourceTypeByUrl\");\nconst titleSearcher_1 = require(\"./titleSearcher\");\nconst convertIMDBTitleIdToUrl_1 = require(\"./utils/convertIMDBTitleIdToUrl\");\nasync function getTitleDetailsByUrl(titleUrl, opts) {\n    const sourceType = (0, guessSourceTypeByUrl_1.guessSourceTypeByUrl)(titleUrl);\n    //  select the resolver\n    let resolver;\n    switch (sourceType) {\n        case enums_1.Source.IMDB:\n        default:\n            resolver = new IMDBTitleDetailsResolver_1.IMDBTitleDetailsResolver(titleUrl);\n    }\n    // get details from resolver\n    let result;\n    try {\n        result = await resolver.getDetails(opts);\n    }\n    catch (e) {\n        throw new Error(\"failed to get the result from IMDB : \" + e.message);\n    }\n    if (!result) {\n        throw new Error(\"there was a problem in getting title details, title resolver returned empty data\");\n    }\n    return result;\n}\nexports.getTitleDetailsByUrl = getTitleDetailsByUrl;\nasync function getTitleDetailsByFoundedTitleDetails(foundedTitleDetails, opts) {\n    return getTitleDetailsByUrl(foundedTitleDetails.url, opts);\n}\nexports.getTitleDetailsByFoundedTitleDetails = getTitleDetailsByFoundedTitleDetails;\nasync function getTitleDetailsByName(titleName, { exactMatch = false, specificType } = {}, opts) {\n    const allResults = await (0, titleSearcher_1.searchTitleByName)(titleName, {\n        exactMatch,\n        specificType,\n    });\n    if (!allResults.length) {\n        throw new Error(`there wasn't any matched title with the given name : '${titleName}'`);\n    }\n    return getTitleDetailsByFoundedTitleDetails(allResults[0], opts);\n}\nexports.getTitleDetailsByName = getTitleDetailsByName;\nasync function getTitleDetailsByIMDBId(titleId, opts) {\n    return getTitleDetailsByUrl((0, convertIMDBTitleIdToUrl_1.convertIMDBTitleIdToUrl)(titleId), opts);\n}\nexports.getTitleDetailsByIMDBId = getTitleDetailsByIMDBId;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,uBAAuB,GAAGF,OAAO,CAACG,qBAAqB,GAAGH,OAAO,CAACI,oCAAoC,GAAGJ,OAAO,CAACK,oBAAoB,GAAG,KAAK,CAAC;AACtJ,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,0BAA0B,GAAGD,OAAO,CAAC,sCAAsC,CAAC;AAClF,MAAME,sBAAsB,GAAGF,OAAO,CAAC,8BAA8B,CAAC;AACtE,MAAMG,eAAe,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAClD,MAAMI,yBAAyB,GAAGJ,OAAO,CAAC,iCAAiC,CAAC;AAC5E,eAAeF,oBAAoBA,CAACO,QAAQ,EAAEC,IAAI,EAAE;EAChD,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAEL,sBAAsB,CAACM,oBAAoB,EAAEH,QAAQ,CAAC;EAC7E;EACA,IAAII,QAAQ;EACZ,QAAQF,UAAU;IACd,KAAKR,OAAO,CAACW,MAAM,CAACC,IAAI;IACxB;MACIF,QAAQ,GAAG,IAAIR,0BAA0B,CAACW,wBAAwB,CAACP,QAAQ,CAAC;EACpF;EACA;EACA,IAAIQ,MAAM;EACV,IAAI;IACAA,MAAM,GAAG,MAAMJ,QAAQ,CAACK,UAAU,CAACR,IAAI,CAAC;EAC5C,CAAC,CACD,OAAOS,CAAC,EAAE;IACN,MAAM,IAAIC,KAAK,CAAC,uCAAuC,GAAGD,CAAC,CAACE,OAAO,CAAC;EACxE;EACA,IAAI,CAACJ,MAAM,EAAE;IACT,MAAM,IAAIG,KAAK,CAAC,kFAAkF,CAAC;EACvG;EACA,OAAOH,MAAM;AACjB;AACApB,OAAO,CAACK,oBAAoB,GAAGA,oBAAoB;AACnD,eAAeD,oCAAoCA,CAACqB,mBAAmB,EAAEZ,IAAI,EAAE;EAC3E,OAAOR,oBAAoB,CAACoB,mBAAmB,CAACC,GAAG,EAAEb,IAAI,CAAC;AAC9D;AACAb,OAAO,CAACI,oCAAoC,GAAGA,oCAAoC;AACnF,eAAeD,qBAAqBA,CAACwB,SAAS,EAAE;EAAEC,UAAU,GAAG,KAAK;EAAEC;AAAa,CAAC,GAAG,CAAC,CAAC,EAAEhB,IAAI,EAAE;EAC7F,MAAMiB,UAAU,GAAG,MAAM,CAAC,CAAC,EAAEpB,eAAe,CAACqB,iBAAiB,EAAEJ,SAAS,EAAE;IACvEC,UAAU;IACVC;EACJ,CAAC,CAAC;EACF,IAAI,CAACC,UAAU,CAACE,MAAM,EAAE;IACpB,MAAM,IAAIT,KAAK,CAAC,yDAAyDI,SAAS,GAAG,CAAC;EAC1F;EACA,OAAOvB,oCAAoC,CAAC0B,UAAU,CAAC,CAAC,CAAC,EAAEjB,IAAI,CAAC;AACpE;AACAb,OAAO,CAACG,qBAAqB,GAAGA,qBAAqB;AACrD,eAAeD,uBAAuBA,CAAC+B,OAAO,EAAEpB,IAAI,EAAE;EAClD,OAAOR,oBAAoB,CAAC,CAAC,CAAC,EAAEM,yBAAyB,CAACuB,uBAAuB,EAAED,OAAO,CAAC,EAAEpB,IAAI,CAAC;AACtG;AACAb,OAAO,CAACE,uBAAuB,GAAGA,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}