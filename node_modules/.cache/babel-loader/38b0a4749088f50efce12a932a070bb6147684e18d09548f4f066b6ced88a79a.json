{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractIMDBIdFromUrl = void 0;\nfunction extractIMDBIdFromUrl(fullUrl, idPrefix) {\n  const matchRegexp = new RegExp(`^${idPrefix}\\\\d+$`);\n  return fullUrl.replace(/\\/$/, \"\").replace(/\\?.+$/, \"\").split(\"/\").filter(i => matchRegexp.test(i)).slice(-1)[0] || \"\";\n}\nexports.extractIMDBIdFromUrl = extractIMDBIdFromUrl;","map":{"version":3,"names":["Object","defineProperty","exports","value","extractIMDBIdFromUrl","fullUrl","idPrefix","matchRegexp","RegExp","replace","split","filter","i","test","slice"],"sources":["/Users/divyashriravichandran/Desktop/Web Dev/Movie Info App/movie-info-app/node_modules/movier/dist/src/utils/extractIMDBIdFromUrl.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractIMDBIdFromUrl = void 0;\nfunction extractIMDBIdFromUrl(fullUrl, idPrefix) {\n    const matchRegexp = new RegExp(`^${idPrefix}\\\\d+$`);\n    return (fullUrl\n        .replace(/\\/$/, \"\")\n        .replace(/\\?.+$/, \"\")\n        .split(\"/\")\n        .filter((i) => matchRegexp.test(i))\n        .slice(-1)[0] || \"\");\n}\nexports.extractIMDBIdFromUrl = extractIMDBIdFromUrl;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,SAASA,oBAAoBA,CAACC,OAAO,EAAEC,QAAQ,EAAE;EAC7C,MAAMC,WAAW,GAAG,IAAIC,MAAM,CAAC,IAAIF,QAAQ,OAAO,CAAC;EACnD,OAAQD,OAAO,CACVI,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBA,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CACpBC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAEC,CAAC,IAAKL,WAAW,CAACM,IAAI,CAACD,CAAC,CAAC,CAAC,CAClCE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AAC3B;AACAZ,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}