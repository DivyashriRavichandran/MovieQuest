{"ast":null,"code":"// api.js\nimport movieInfo from 'movie-info-homeserver';\nimport axios from 'axios'; // Make sure to install axios with `npm install axios`\n\nconst YOUTUBE_API_KEY = 'YOUR_YOUTUBE_API_KEY'; // Replace with your actual API key\nconst YOUTUBE_SEARCH_URL = 'https://www.googleapis.com/youtube/v3/search';\nexport const fetchMovie = async query => {\n  try {\n    const response = await movieInfo(query);\n    return response;\n  } catch (error) {\n    console.error('Error fetching movie:', error.message || error);\n    return null;\n  }\n};\n\n// Function to fetch the trailer from YouTube\nexport const fetchTrailer = async title => {\n  try {\n    const query = `${title} trailer`;\n    const response = await axios.get(YOUTUBE_SEARCH_URL, {\n      params: {\n        part: 'snippet',\n        q: query,\n        key: YOUTUBE_API_KEY,\n        type: 'video',\n        maxResults: 1 // Get the first result\n      }\n    });\n\n    // Check the response for items\n    if (response.data.items && response.data.items.length > 0) {\n      var _response$data$items$, _response$data$items$2;\n      const videoId = (_response$data$items$ = response.data.items[0]) === null || _response$data$items$ === void 0 ? void 0 : (_response$data$items$2 = _response$data$items$.id) === null || _response$data$items$2 === void 0 ? void 0 : _response$data$items$2.videoId;\n      if (videoId) {\n        return videoId;\n      } else {\n        console.error('No videoId found in response');\n        return null;\n      }\n    } else {\n      console.error('No items found in response');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error fetching trailer from YouTube:', error.message || error);\n    return null;\n  }\n};","map":{"version":3,"names":["movieInfo","axios","YOUTUBE_API_KEY","YOUTUBE_SEARCH_URL","fetchMovie","query","response","error","console","message","fetchTrailer","title","get","params","part","q","key","type","maxResults","data","items","length","_response$data$items$","_response$data$items$2","videoId","id"],"sources":["/Users/divyashriravichandran/Desktop/Web Dev/Movie Info App/movie-info-app/src/utils/api.js"],"sourcesContent":["// api.js\nimport movieInfo from 'movie-info-homeserver';\nimport axios from 'axios'; // Make sure to install axios with `npm install axios`\n\nconst YOUTUBE_API_KEY = 'YOUR_YOUTUBE_API_KEY'; // Replace with your actual API key\nconst YOUTUBE_SEARCH_URL = 'https://www.googleapis.com/youtube/v3/search';\n\nexport const fetchMovie = async (query) => {\n  try {\n    const response = await movieInfo(query);\n    return response;\n  } catch (error) {\n    console.error('Error fetching movie:', error.message || error);\n    return null;\n  }\n};\n\n// Function to fetch the trailer from YouTube\nexport const fetchTrailer = async (title) => {\n  try {\n    const query = `${title} trailer`;\n    const response = await axios.get(YOUTUBE_SEARCH_URL, {\n      params: {\n        part: 'snippet',\n        q: query,\n        key: YOUTUBE_API_KEY,\n        type: 'video',\n        maxResults: 1, // Get the first result\n      },\n    });\n\n    // Check the response for items\n    if (response.data.items && response.data.items.length > 0) {\n      const videoId = response.data.items[0]?.id?.videoId;\n      if (videoId) {\n        return videoId;\n      } else {\n        console.error('No videoId found in response');\n        return null;\n      }\n    } else {\n      console.error('No items found in response');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error fetching trailer from YouTube:', error.message || error);\n    return null;\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,MAAMC,eAAe,GAAG,sBAAsB,CAAC,CAAC;AAChD,MAAMC,kBAAkB,GAAG,8CAA8C;AAEzE,OAAO,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACK,KAAK,CAAC;IACvC,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,IAAIF,KAAK,CAAC;IAC9D,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,IAAI;IACF,MAAMN,KAAK,GAAG,GAAGM,KAAK,UAAU;IAChC,MAAML,QAAQ,GAAG,MAAML,KAAK,CAACW,GAAG,CAACT,kBAAkB,EAAE;MACnDU,MAAM,EAAE;QACNC,IAAI,EAAE,SAAS;QACfC,CAAC,EAAEV,KAAK;QACRW,GAAG,EAAEd,eAAe;QACpBe,IAAI,EAAE,OAAO;QACbC,UAAU,EAAE,CAAC,CAAE;MACjB;IACF,CAAC,CAAC;;IAEF;IACA,IAAIZ,QAAQ,CAACa,IAAI,CAACC,KAAK,IAAId,QAAQ,CAACa,IAAI,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MACzD,MAAMC,OAAO,IAAAF,qBAAA,GAAGhB,QAAQ,CAACa,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,cAAAE,qBAAA,wBAAAC,sBAAA,GAAtBD,qBAAA,CAAwBG,EAAE,cAAAF,sBAAA,uBAA1BA,sBAAA,CAA4BC,OAAO;MACnD,IAAIA,OAAO,EAAE;QACX,OAAOA,OAAO;MAChB,CAAC,MAAM;QACLhB,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAC;QAC7C,OAAO,IAAI;MACb;IACF,CAAC,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;MAC3C,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACE,OAAO,IAAIF,KAAK,CAAC;IAC7E,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}