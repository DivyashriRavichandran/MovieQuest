{"ast":null,"code":"'use strict';\n\n(function (root, cx) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['isomorphic-fetch'], cx);\n  } else if (typeof exports === 'object') {\n    // Node, CommonJS-like\n    module.exports = cx(require('isomorphic-fetch'));\n  } else {\n    // Browser globals (root is window)\n    root.movieInfo = cx(root.fetch);\n  }\n})(this, function (fetch) {\n  function movieInfo(movie, year, cb) {\n    // Search parameters\n    var search = {\n      // TMDB key (public on purpose)\n      key: '9d2bff12ed955c7f1f74b83187f188ae',\n      base: 'https://api.themoviedb.org',\n      imageBase: 'http://image.tmdb.org/t/p/original',\n      year: null,\n      movie: movie\n    };\n    if (typeof movie !== 'string') {\n      throw new Error('Expected a string');\n    } else if (typeof year === 'function') {\n      cb = year;\n    } else if (typeof year === 'string' || typeof year === 'number') {\n      search.year = year;\n    }\n    if (typeof cb !== 'function') cb = null;\n    var url = search.base + encodeURI('/3/search/movie?api_key=' + search.key + '&query=' + search.movie + (search.year !== null ? '&year=' + search.year : ''));\n\n    // Request\n    var response = fetch(url, {\n      method: 'GET'\n    }).then(function (response) {\n      return response.json();\n    }, function (error) {\n      return Promise.reject(error.message); //= > String\n    }).then(function (json) {\n      if (json && typeof json.status_message !== 'undefined') {\n        return Promise.reject(new Error('JSON Error: ' + json.status_message));\n      }\n      if (json && json.results && json.results.length === 0) {\n        // Retry failed search without year\n        if (search.year !== null) {\n          search.year = null;\n          return movieInfo(search.movie, null, cb);\n        } else {\n          return Promise.reject(new Error('Search Error: No results found'));\n        }\n      } else {\n        // Success\n        var res = json && json.results[0];\n        res.imageBase = search.imageBase;\n        return res;\n      }\n    }).catch(error => error);\n\n    // Callback\n    if (cb) {\n      return response.then(res => cb(null, res), err => cb(err, null));\n    }\n\n    // Promise\n    return response;\n  }\n\n  // exposed public method\n  return movieInfo;\n});","map":{"version":3,"names":["root","cx","define","amd","exports","module","require","movieInfo","fetch","movie","year","cb","search","key","base","imageBase","Error","url","encodeURI","response","method","then","json","error","Promise","reject","message","status_message","results","length","res","catch","err"],"sources":["/Users/divyashriravichandran/Desktop/Web Dev/MovieQuest/MovieQuest/node_modules/movie-info-homeserver/index.js"],"sourcesContent":["'use strict';\n\n( function ( root, cx ) {\n\n\tif ( typeof define === 'function' && define.amd ) {\n\n\t\t// AMD\n\t\tdefine( ['isomorphic-fetch'], cx )\n\n\t} else if ( typeof exports === 'object' ) {\n\n\t\t// Node, CommonJS-like\n\t\tmodule.exports = cx( require( 'isomorphic-fetch' ) )\n\n\t} else {\n\n\t\t// Browser globals (root is window)\n\t\troot.movieInfo = cx( root.fetch )\n\n\t}\n\n} )( this, function ( fetch ) {\n\n\tfunction movieInfo ( movie, year, cb ) {\n\n\t\t// Search parameters\n\t\tvar search = {\n\t\t\t// TMDB key (public on purpose)\n\t\t\tkey: '9d2bff12ed955c7f1f74b83187f188ae',\n\t\t\tbase: 'https://api.themoviedb.org',\n\t\t\timageBase: 'http://image.tmdb.org/t/p/original',\n\t\t\tyear: null,\n\t\t\tmovie: movie\n\t\t}\n\n\t\tif ( typeof movie !== 'string' ) {\n\n\t\t\tthrow new Error( 'Expected a string' )\n\n\t\t} else if ( typeof year === 'function' ) {\n\n\t\t\tcb = year\n\n\t\t} else if ( typeof year === 'string' || typeof year === 'number' ) {\n\n\t\t\tsearch.year = year\n\n\t\t}\n\t\tif ( typeof cb !== 'function' ) cb = null\n\n\t\tvar url =\n\t\t\tsearch.base +\n\t\t\tencodeURI(\n\t\t\t\t'/3/search/movie?api_key=' +\n\t\t\t\t\tsearch.key +\n\t\t\t\t\t'&query=' +\n\t\t\t\t\tsearch.movie +\n\t\t\t\t\t( search.year !== null ? '&year=' + search.year : '' )\n\t\t\t)\n\n\t\t// Request\n\t\tvar response = fetch( url, {\n\t\t\tmethod: 'GET'\n\t\t} )\n\t\t\t.then(\n\t\t\t\tfunction ( response ) {\n\n\t\t\t\t\treturn response.json()\n\n\t\t\t\t},\n\t\t\t\tfunction ( error ) {\n\n\t\t\t\t\treturn Promise.reject( error.message ) //= > String\n\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then( function ( json ) {\n\n\t\t\t\tif ( json && typeof json.status_message !== 'undefined' ) {\n\n\t\t\t\t\treturn Promise.reject( new Error( 'JSON Error: ' + json.status_message ) )\n\n\t\t\t\t}\n\t\t\t\tif ( json && json.results && json.results.length === 0 ) {\n\n\t\t\t\t\t// Retry failed search without year\n\t\t\t\t\tif ( search.year !== null ) {\n\n\t\t\t\t\t\tsearch.year = null\n\t\t\t\t\t\treturn movieInfo( search.movie, null, cb )\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn Promise.reject( new Error( 'Search Error: No results found' ) )\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Success\n\t\t\t\t\tvar res = json && json.results[0]\n\t\t\t\t\tres.imageBase = search.imageBase\n\t\t\t\t\treturn res\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( error => error )\n\n\t\t// Callback\n\t\tif ( cb ) {\n\n\t\t\treturn response.then( res => cb( null, res ), err => cb( err, null ) )\n\n\t\t}\n\n\t\t// Promise\n\t\treturn response\n\n\t}\n\n\t// exposed public method\n\treturn movieInfo\n\n} )\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}