{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.titleDetailsQuery = void 0;\nconst graphql_request_1 = require(\"graphql-request\");\nexports.titleDetailsQuery = (0, graphql_request_1.gql)`\n  query GetTitleDetails($titleId: ID!) {\n    title(id: $titleId) {\n      id\n      titleText {\n        text\n      }\n      originalTitleText {\n        text\n      }\n      akas(last: 200) {\n        edges {\n          node {\n            country {\n              text\n            }\n            text\n          }\n        }\n      }\n      releaseDate {\n        month\n        year\n        day\n        country {\n          text\n        }\n      }\n      genres {\n        genres {\n          text\n        }\n      }\n      directors: credits(first: 200, filter: { categories: [\"director\"] }) {\n        edges {\n          node {\n            category {\n              text\n            }\n            name {\n              id\n              nameText {\n                text\n              }\n            }\n          }\n        }\n      }\n      writers: credits(first: 200, filter: { categories: [\"writer\"] }) {\n        edges {\n          node {\n            category {\n              text\n            }\n            name {\n              id\n              nameText {\n                text\n              }\n            }\n          }\n        }\n      }\n      meta {\n        publicationStatus\n      }\n      titleType {\n        categories {\n          text\n        }\n        id\n        canHaveEpisodes\n        isEpisode\n        isSeries\n        text\n      }\n      plot {\n        plotText {\n          plainText\n        }\n      }\n      casts: credits(first: 200, filter: { categories: [\"actor\", \"actress\"] }) {\n        edges {\n          node {\n            category {\n              text\n            }\n            name {\n              id\n              nameText {\n                text\n              }\n            }\n            ... on Cast {\n              characters {\n                name\n              }\n              name {\n                akas(first: 100) {\n                  edges {\n                    node {\n                      text\n                    }\n                  }\n                }\n              }\n              episodeCredits(first: 200) {\n                total\n                yearRange {\n                  year\n                  endYear\n                }\n              }\n            }\n          }\n        }\n      }\n      producers: credits(first: 200, filter: { categories: [\"producer\"] }) {\n        edges {\n          node {\n            category {\n              text\n            }\n            name {\n              id\n              nameText {\n                text\n              }\n            }\n          }\n        }\n      }\n      ratingsSummary {\n        aggregateRating\n        voteCount\n      }\n      releaseYear {\n        year\n        endYear\n      }\n      releaseDates(first: 200) {\n        edges {\n          node {\n            day\n            month\n            year\n            country {\n              text\n            }\n          }\n        }\n      }\n      certificate {\n        rating\n      }\n      spokenLanguages {\n        spokenLanguages {\n          text\n        }\n      }\n      countriesOfOrigin {\n        countries {\n          text\n        }\n      }\n      primaryImage {\n        caption {\n          plainText\n        }\n        height\n        width\n        id\n        type\n        url\n        names {\n          nameText {\n            text\n          }\n          id\n        }\n      }\n      stillFrameImages: images(first: 200, filter: { types: [\"still_frame\"] }) {\n        edges {\n          node {\n            caption {\n              plainText\n            }\n            height\n            width\n            id\n            type\n            url\n            names {\n              nameText {\n                text\n              }\n              id\n            }\n          }\n        }\n      }\n      posterImages: images(first: 200, filter: { types: [\"poster\"] }) {\n        edges {\n          node {\n            caption {\n              plainText\n            }\n            height\n            width\n            id\n            type\n            url\n            names {\n              nameText {\n                text\n              }\n              id\n            }\n          }\n        }\n      }\n      taglines(first: 200) {\n        edges {\n          node {\n            text\n          }\n        }\n      }\n      keywords(first: 200) {\n        edges {\n          node {\n            text\n          }\n        }\n      }\n      quotes(first: 200) {\n        edges {\n          node {\n            isSpoiler\n            lines {\n              characters {\n                character\n                name {\n                  id\n                  nameText {\n                    text\n                  }\n                }\n              }\n              stageDirection\n              text\n            }\n          }\n        }\n      }\n      goofs(first: 200) {\n        edges {\n          node {\n            text {\n              plainText\n            }\n            category {\n              text\n            }\n          }\n        }\n      }\n      prestigiousAwardSummary {\n        award {\n          category {\n            text\n          }\n          event {\n            text\n          }\n          eventEditionId\n          text\n          year\n        }\n        nominations\n        wins\n      }\n      awardNominations(first: 300) {\n        edges {\n          node {\n            award {\n              category {\n                text\n              }\n              event {\n                text\n              }\n              eventEditionId\n              text\n              year\n            }\n            id\n            forEpisodes {\n              titleText {\n                text\n              }\n            }\n            forSongTitles\n            isWinner\n          }\n        }\n      }\n      runtime {\n        seconds\n        displayableProperty {\n          value {\n            plainText\n          }\n        }\n      }\n      companyCredits(first: 200) {\n        edges {\n          node {\n            category {\n              text\n            }\n            company {\n              id\n              companyText {\n                text\n              }\n            }\n          }\n        }\n      }\n      lifetimeGross(boxOfficeArea: WORLDWIDE) {\n        total {\n          currency\n          amount\n        }\n      }\n      openingWeekendGross(boxOfficeArea: WORLDWIDE) {\n        gross {\n          total {\n            currency\n            amount\n          }\n        }\n        theaterCount\n        weekendEndDate\n        weekendStartDate\n      }\n      rankedLifetimeGross(boxOfficeArea: DOMESTIC) {\n        boxOfficeAreaType {\n          text\n        }\n        total {\n          currency\n          amount\n        }\n      }\n      productionBudget {\n        budget {\n          currency\n          amount\n        }\n      }\n      metacritic {\n        metascore {\n          score\n          reviewCount\n        }\n        url\n      }\n    }\n  }\n`;","map":{"version":3,"names":["Object","defineProperty","exports","value","titleDetailsQuery","graphql_request_1","require","gql"],"sources":["/Users/divyashriravichandran/Desktop/Web Dev/Movie Info App/movie-info-app/node_modules/movier/dist/src/gql/titleDetailsQuery.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.titleDetailsQuery = void 0;\nconst graphql_request_1 = require(\"graphql-request\");\nexports.titleDetailsQuery = (0, graphql_request_1.gql) `\n  query GetTitleDetails($titleId: ID!) {\n    title(id: $titleId) {\n      id\n      titleText {\n        text\n      }\n      originalTitleText {\n        text\n      }\n      akas(last: 200) {\n        edges {\n          node {\n            country {\n              text\n            }\n            text\n          }\n        }\n      }\n      releaseDate {\n        month\n        year\n        day\n        country {\n          text\n        }\n      }\n      genres {\n        genres {\n          text\n        }\n      }\n      directors: credits(first: 200, filter: { categories: [\"director\"] }) {\n        edges {\n          node {\n            category {\n              text\n            }\n            name {\n              id\n              nameText {\n                text\n              }\n            }\n          }\n        }\n      }\n      writers: credits(first: 200, filter: { categories: [\"writer\"] }) {\n        edges {\n          node {\n            category {\n              text\n            }\n            name {\n              id\n              nameText {\n                text\n              }\n            }\n          }\n        }\n      }\n      meta {\n        publicationStatus\n      }\n      titleType {\n        categories {\n          text\n        }\n        id\n        canHaveEpisodes\n        isEpisode\n        isSeries\n        text\n      }\n      plot {\n        plotText {\n          plainText\n        }\n      }\n      casts: credits(first: 200, filter: { categories: [\"actor\", \"actress\"] }) {\n        edges {\n          node {\n            category {\n              text\n            }\n            name {\n              id\n              nameText {\n                text\n              }\n            }\n            ... on Cast {\n              characters {\n                name\n              }\n              name {\n                akas(first: 100) {\n                  edges {\n                    node {\n                      text\n                    }\n                  }\n                }\n              }\n              episodeCredits(first: 200) {\n                total\n                yearRange {\n                  year\n                  endYear\n                }\n              }\n            }\n          }\n        }\n      }\n      producers: credits(first: 200, filter: { categories: [\"producer\"] }) {\n        edges {\n          node {\n            category {\n              text\n            }\n            name {\n              id\n              nameText {\n                text\n              }\n            }\n          }\n        }\n      }\n      ratingsSummary {\n        aggregateRating\n        voteCount\n      }\n      releaseYear {\n        year\n        endYear\n      }\n      releaseDates(first: 200) {\n        edges {\n          node {\n            day\n            month\n            year\n            country {\n              text\n            }\n          }\n        }\n      }\n      certificate {\n        rating\n      }\n      spokenLanguages {\n        spokenLanguages {\n          text\n        }\n      }\n      countriesOfOrigin {\n        countries {\n          text\n        }\n      }\n      primaryImage {\n        caption {\n          plainText\n        }\n        height\n        width\n        id\n        type\n        url\n        names {\n          nameText {\n            text\n          }\n          id\n        }\n      }\n      stillFrameImages: images(first: 200, filter: { types: [\"still_frame\"] }) {\n        edges {\n          node {\n            caption {\n              plainText\n            }\n            height\n            width\n            id\n            type\n            url\n            names {\n              nameText {\n                text\n              }\n              id\n            }\n          }\n        }\n      }\n      posterImages: images(first: 200, filter: { types: [\"poster\"] }) {\n        edges {\n          node {\n            caption {\n              plainText\n            }\n            height\n            width\n            id\n            type\n            url\n            names {\n              nameText {\n                text\n              }\n              id\n            }\n          }\n        }\n      }\n      taglines(first: 200) {\n        edges {\n          node {\n            text\n          }\n        }\n      }\n      keywords(first: 200) {\n        edges {\n          node {\n            text\n          }\n        }\n      }\n      quotes(first: 200) {\n        edges {\n          node {\n            isSpoiler\n            lines {\n              characters {\n                character\n                name {\n                  id\n                  nameText {\n                    text\n                  }\n                }\n              }\n              stageDirection\n              text\n            }\n          }\n        }\n      }\n      goofs(first: 200) {\n        edges {\n          node {\n            text {\n              plainText\n            }\n            category {\n              text\n            }\n          }\n        }\n      }\n      prestigiousAwardSummary {\n        award {\n          category {\n            text\n          }\n          event {\n            text\n          }\n          eventEditionId\n          text\n          year\n        }\n        nominations\n        wins\n      }\n      awardNominations(first: 300) {\n        edges {\n          node {\n            award {\n              category {\n                text\n              }\n              event {\n                text\n              }\n              eventEditionId\n              text\n              year\n            }\n            id\n            forEpisodes {\n              titleText {\n                text\n              }\n            }\n            forSongTitles\n            isWinner\n          }\n        }\n      }\n      runtime {\n        seconds\n        displayableProperty {\n          value {\n            plainText\n          }\n        }\n      }\n      companyCredits(first: 200) {\n        edges {\n          node {\n            category {\n              text\n            }\n            company {\n              id\n              companyText {\n                text\n              }\n            }\n          }\n        }\n      }\n      lifetimeGross(boxOfficeArea: WORLDWIDE) {\n        total {\n          currency\n          amount\n        }\n      }\n      openingWeekendGross(boxOfficeArea: WORLDWIDE) {\n        gross {\n          total {\n            currency\n            amount\n          }\n        }\n        theaterCount\n        weekendEndDate\n        weekendStartDate\n      }\n      rankedLifetimeGross(boxOfficeArea: DOMESTIC) {\n        boxOfficeAreaType {\n          text\n        }\n        total {\n          currency\n          amount\n        }\n      }\n      productionBudget {\n        budget {\n          currency\n          amount\n        }\n      }\n      metacritic {\n        metascore {\n          score\n          reviewCount\n        }\n        url\n      }\n    }\n  }\n`;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAG,KAAK,CAAC;AAClC,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACpDJ,OAAO,CAACE,iBAAiB,GAAG,CAAC,CAAC,EAAEC,iBAAiB,CAACE,GAAG,CAAE;AACvignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}